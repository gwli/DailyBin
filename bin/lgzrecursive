#!/usr/bin/env python
# -*- coding:utf-8 -*-
import os
import logging
import subprocess
logging.basicConfig(level=logging.DEBUG)
logger=logging.getLogger(__name__)
logger.setLevel(logging.DEBUG)
import pprint 
pp=pprint.PrettyPrinter(indent=4)
import imp
import argparse
import sys
sys.path.append("/home/devtoolsqa8/git/dailybin/lib/python")
import lgzsearch 
EDITOR = os.environ.get("EDITOR",'vim')

def recursive_search(resultfile="test",keyword="hello"):
    if os.path.exists(resultfile):
       subprocess.call([EDITOR,"+/Q_0",resultfile])
    else:
       lgzsearch.mk_lgzsearch_tml(resultfile,keyword) 
       status = "contine"
   
    rs=imp.load_source("data",resultfile) 
    status = rs.meta_data['status'] 
    Major  = rs.meta_data['Major']
    while True:
        if status ==".":
           break
        lgzsearch.update_status(resultfile,sleep=False)
        subprocess.call([EDITOR,"+/Q_{}".format(Major),resultfile])
        rs=imp.load_source("data",resultfile) 
        status = rs.status

if __name__ == "__main__":
   parser = argparse.ArgumentParser(description="lgzrecursive")
   parser.add_argument('-f',help='result file',type=str,default='test.py')
   parser.add_argument('-kw',help='result file',type=str,default='人类')
   args = parser.parse_args()
   
   recursive_search(args.f,keyword=args.kw)
